{% extends 'base.html.twig' %}

{% block body_id 'project_index' %}

{% block main %}

    <div class="text-right">
        <div class="form-inline">
            <input data-action="name-filter"
                   type="text"
                   minlength="3"
                   class="form-control"
                   placeholder="{{ 'project.name'|trans }}">
            <button data-action="search-name"
                    class="btn btn-primary"
                    disabled="disabled">
                <i class="fa fa-search" aria-hidden="true"></i> {{ 'project.menu.search'|trans }}
            </button>
            <button data-action="search-clear"
                    class="btn btn-primary">
                <i class="fa fa-times" aria-hidden="true"></i>
            </button>
        </div>
    </div>

    <table class="table table-striped table-hover table-responsive">
        <thead>
        <tr>
            <th scope="col">ID</th>
            <th scope="col">{{ 'project.name'|trans }}</th>
            <th scope="col">{{ 'project.amount'|trans }}</th>
            <th scope="col">{{ 'project.start_date'|trans }}</th>
        </tr>
        </thead>
        <tbody>

        {% for project in paginator.results %}
            <tr>
                <th scope="row">{{ project.id }}</th>
                <td>{{ project.name }}</td>
                <td>{{ project.printableAmount }}</td>
                <td>{{ project.startDate|format_datetime('short', 'none', locale=app.request.locale) }}</td>
            </tr>
        {% else %}
            <tr>
                <td colspan="4">
                    <div class="well text-center">{{ 'projects.no_projects_found'|trans }}</div>
                </td>
            </tr>
        {% endfor %}
        </tbody>
    </table>

    {% if paginator.hasToPaginate %}
        <div class="navigation text-center">
            <ul class="pagination">
                {% if paginator.hasPreviousPage %}
                    <li class="prev">
                        <a href="{{ path('project_index_paginated', {page: paginator.previousPage}) }}" rel="previous">
                            <i class="fa fw fa-long-arrow-left"></i> {{ 'paginator.previous'|trans }}
                        </a>
                    </li>
                {% else %}
                    <li class="prev disabled">
                        <span><i class="fa fw fa-arrow-left"></i> {{ 'paginator.previous'|trans }}</span>
                    </li>
                {% endif %}

                {% for i in 1..paginator.lastPage %}
                    {% if i == paginator.currentPage %}
                        <li class="active"><span>{{ i }} <span
                                    class="sr-only">{{ 'paginator.current'|trans }}</span></span></li>
                    {% else %}
                        <li><a href="{{ path('project_index_paginated', {page: i}) }}">{{ i }}</a></li>
                    {% endif %}
                {% endfor %}

                {% if paginator.hasNextPage %}
                    <li class="next">
                        <a href="{{ path('project_index_paginated', {page: paginator.nextPage}) }}"
                           rel="next">
                            {{ 'paginator.next'|trans }} <i class="fa fw fa-arrow-right"></i>
                        </a>
                    </li>
                {% else %}
                    <li class="next disabled">
                        <span>{{ 'paginator.next'|trans }} <i class="fa fw fa-arrow-right"></i></span></li>
                {% endif %}
            </ul>
        </div>
    {% endif %}
{% endblock %}

{% block sidebar %}
    {{ parent() }}

    {{ show_source_code(_self) }}
{% endblock %}

{% block scripts %}
    <script href="https://polyfill.io/v3/polyfill.min.js?features=URL%2CURLSearchParams"></script>
    <script>
        document.querySelector('input[data-action=name-filter]')
            .addEventListener('input', (event) => {
                const button = document.querySelector('button[data-action=search-name]')
                const projectName = event.target.value
                button.disabled = !(projectName.length >= 3)
            })
        document.querySelector('button[data-action=search-name]')
            .addEventListener('click', () => {
                const projectName = document.querySelector('input[data-action=name-filter]').value
                const url = new URL(window.location.href)
                url.searchParams.set('name', projectName)
                window.location.href = url.toString()
            })
        document.querySelector('button[data-action=search-clear]')
            .addEventListener('click', () => {
                const url = new URL(window.location.href)
                url.searchParams. delete('name')
                window.location.href = url.toString()
            })
    </script>
{% endblock scripts %}
